Shader "BanMing/Border Aplha"
{
	Properties
	{
		[PerRendererData] _MainTex("Texture", 2D) = "white" {}
		_AplhaBorder("Aplha Border",Range(0.01,1)) = 0.01
		_AplhaMask("Aplha Mask",Range(0.01,1)) = 0.05
	}
		SubShader
		{
			Tags
			{
				"Queue" = "Transparent"//透明通道
				"IgnoreProjector" = "True"
				"RenderType" = "Transparent"
				"PreviewType" = "Plane"
				"CanUseSpriteAtlas" = "True"
			}

			Cull Off
			Lighting Off
			ZWrite Off
			Blend One OneMinusSrcAlpha

			Pass
			{
				CGPROGRAM
				#pragma vertex vert
				#pragma fragment frag

				#include "UnityCG.cginc"

				float _AplhaBorder;
				float _AplhaMask;

				struct appdata
				{
					float4 vertex : POSITION;//坐标
					float2 uv : TEXCOORD0;
				};

				struct v2f
				{
					float2 uv : TEXCOORD0;
					float4 vertex : SV_POSITION;
					// fixed alphaColor : Color;
					float x : TEXCOORD1;
				};

				sampler2D _MainTex;
				float4 _MainTex_ST;

				v2f vert(appdata v)
				{
					v2f o;
					o.vertex = UnityObjectToClipPos(v.vertex);//0-1的坐标
					o.uv = TRANSFORM_TEX(v.uv, _MainTex);
					
			    	o.x = o.vertex.y / o.vertex.w;		
					return o;
				}

				fixed4 frag(v2f i) : SV_Target
				 {

                 // col fixed4 可以直接声明一个新的fixed4(0,0,0,1)->  r,g,b,a
				 fixed4 col = tex2D(_MainTex, i.uv);//uv坐标是图像0-1的坐标  左下角为(0.0)点
				 if (i.uv.y > 1 - _AplhaMask)
				 {
					col *= 0;
				 }
				 if(i.uv.y>(1-_AplhaBorder- _AplhaMask)&& i.uv.y <= 1 - _AplhaMask)
			     {
					
					col *= saturate(((1 - i.uv.y)- _AplhaMask) /_AplhaBorder);
			     }
				
				return col;
			}
			ENDCG
		}
		}
}
